/* 
ЁЯФ╕рдЬрдВрдм рддреАрдиреЛ variable рдХрд╛рдо рдХрд░ рд░рд╣реЗ рдереЗ рддреЛ рдЬрд░реБрд░рдд рдХреНрдпрд╛ рдереА рддреАрдиреЛ рдХреЛ рд▓рд╛рдиреЗ рдХреА 
ЁЯФ╕var block scope рдХреЗ рдЙрдкрд░ рдХрд╛рдо рдирд╣реА рдХрд░рддрд╛ рд╣реЗ
*/

/* тнР global scope рдХреА рдХрд╣рд╛рдгреА рдЕрдВрджрд░ scope рдореИ available рд╣реЛрддреА рд╣реИ */

// var c = 300
let a = 300

if (true) { 
    /* тЪая╕П block scope рдХреЗ рдЕрдВрджрд░ рдХреА рдХрд╣рд╛рдгреА рдмрд╛рд╣рд░ leak рдирд╣реА рдЬрд╛рдиреА рдЪрд╛рд╣рд┐рдпреЗ */
    let a =10
    const b = 20
    // var c = 30
    console.log("INNER: ", a);
} /* curly brases рд╣рд░ language рдореИ scope рд╣реИ 
    ЁЯТе рдЬрд┐рддрдиреА рдмрд╛рд░ curly brases рдЖрдПрдЧрд╛ рдЙрддрдиреА рдмрд╛рд░ scope рдЖрдПрдЧрд╛ */


// console.log(a);
// console.log(b);
// console.log(c);


/*
ЁЯТ╗
тШДя╕ПрдЬрдВрдм рдЖрдк browser рдореИ inspect рдХрд░рдХреЗ console рдореИ scope рдЕрд▓рдЧ рд╣реИ 
ЁЯМардФрд░ рдЬрдВрдм рдЖрдк code environment node рдореИ run рдХрд░рддреЗ рд╣реИ рддреЛ global scope рдЕрд▓рдЧ рд╣реИ 
*/



/*
Part 2я╕ПтГг
ЁЯТаNested scope 
ЁЯТбрдЫреЛрдЯрд╛ рдмрдЪреНрдЪрд╛ рдмрдбреЛ рд╕реЗ ice-cream рдорд╛рдВрдЧ рд╕рдХрддрд╛ рд╣реИ рд▓реЗрдХреАрди, рдмрдбреЗ рдЫреЛрдЯреЗ рдмрдЪреНрдЪреЛ рд╕реЗ ice-cream рдирд╣реА рдорд╛рдВрдЧ рд╕рдХрддреЗ 
ЁЯТаclosure(basic not detailed) child func can access parent variable
similar to this nested scope works 
*/

function one() {
    const username = "abhay"

    function two() {
        const website = "youtube"
        console.log(username);
    }
    /* рдЬрд┐рддрдиреА рдмрд╛рд░ func declare рдУрд░ call рдХрд░рддреЗ рд╣реИ рдЙрдирдХреЗ рд▓рд┐рдпреЗ рдЕрд▓рдЧ рд╕реЗ call stack рдмрдирддрд╛ рд╣реИ  */
    // console.log(website /* errorтЭМ */);

    two() // execution

}

// one ()



if (true) {
    const username = "abhay"
    if (username === "abhay") {
        const website = " study"
        // console.log(username + website);
    }
    // console.log(website /* errorтЭМ */);
}

// console.log(username /* errorтЭМ */);



// +++++++++++++++++ intresting +++++++++++++++++

console.log(addOne(5)); // func is only declared so no error

function addOne(num) {
    return num + 1
}

// addTwo(5 /* errorтЭМ */) /* coz of ||hoisting|| func is declared & holded in variable */

const addTwo /* callAs"Expression" like variable very powerfull it can hold JSON values, func almost anyting can be hold inside variable */ = function (num) {
    return num + 2
}

addTwo(5)