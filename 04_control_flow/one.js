// ‡§ï‡•Ç‡§ö situation ‡§π‡•ã ‡§§‡•ã ‡§Ø‡•á control execute ‡§π‡•ã "or"
// ‡§ï‡•Ç‡§ö situation ‡§π‡•ã ‡§§‡•ã ‡§Ø‡•á control execute ‡§π‡•ã 


// if 
const isUserLoggedIn = true
const temprature = 5
/* //1Ô∏è‚É£ 
if (temprature === 52) {
    console.log("less than 50");
} else {
    console.log(`temprature is greater than 50 ${temprature}`);
}

console.log("execute"); 
*/

// <, >, <=, >=, ==, !=, ===, !== 


/* //2Ô∏è‚É£
const score = 200

if (score > 100) {
    let power = "fly"  // var is a global scope
    console.log(`User power: ${power}`);
}

console.log(`User power: ${power}`);
*/


/* //3Ô∏è‚É£
const balance = 1000

// if (balance > 500) console.log("test"),console.log("test2"); // üî∏2Ô∏è‚É£Implicite scope in 03_basics/03_Arrow.js ‚ùå‚ùå‚ùåbut do not write such a code


if (balance < 500) {
    console.log("less than 500");

}   else if (balance < 750) {
    console.log("less than 750");

} else if (balance < 900) {
    console.log("less than 900");

} else {  // their is condition for else
    console.log("less than 1200");

}
*/

  //4Ô∏è‚É£
const isUserLoggedIn2 = true
const debitCard = true
const loggedInFromGoogle = false
const loggedInFromEmail = true

if (isUserLoggedIn2 && debitCard && 2==3 /* 2==2 ‚≠êall conditon true*/) {
    console.log("allow to buy course");
}

if (loggedInFromGoogle || loggedInFromEmail /* multiple or can be used || ‚≠êone/atleast one condition true ‡§Ö‡§™‡§®‡§æ  ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡•Å‡§Ç‡§ó‡§æ condition ‡§ï‡•á ‡§Ö‡§Ç‡§¶‡§∞ ‡§ú‡§æ‡§ä‡§Ç‡§ó‡§æ*/) {
    console.log("User logged in");
}