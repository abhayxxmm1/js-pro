/*
 object prototype ‡§ï‡•Ä properties inherit ‡§π‡•à ‡§î‡§∞ object ‡§ï‡•Ä ‡§ñ‡§º‡•Å‡§¶ ‡§ï‡•Ä ‡§≠‡•Ä properties ‡§π‡•à
‡§ú‡•à‡§∏‡•á ‡§ï‡•Ä constructurs new_keyword class ‡§∏‡§¨ ‡§Ø‡§π‡•Ä ‡§∏‡•á ‡§ö‡§æ‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à */

const discriptor = Object.getOwnPropertyDescriptor(Math, "PI"); 
/*
  PI ‡§ú‡•ã ‡§π‡•à property ‡§ï‡§æ name ‡§π‡•à ‡§î‡§∞ 3.14 ‡§â‡§∏‡§ï‡•Ä value ‡§π‡•à || PI ‡§ï‡•Ä value single quote double quote ‡§ï‡§ø‡§∏‡•Ä ‡§Æ‡•à‡§Ç ‡§≠‡•Ä ‡§≤‡§ø‡§ñ ‡§∏‡§ï‡§§‡•á ‡§π‡•à */

// console.log(discriptor); // check this

/* 
console.log(Math.PI);
Math.PI = 5
console.log(Math.PI); // value change ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§∞‡§π‡•Ä ‡§π‡•à üçë ‡§ï‡§ø‡§ä ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã ‡§∞‡§π‡•Ä 
 */

const chai = {
  name: "jinger",
  price: 243,
  isAvailable: true,

  orderChai: function () {
    console.log(`chai nhi bani /* code faat gaya */`);
  },
};
console.log(Object.getOwnPropertyDescriptor(chai, "name"));

Object.defineProperty(chai, 'name',{
    // writable: false,
    enumerable: false,
    // configurable: true
})

console.log(Object.getOwnPropertyDescriptor(chai, "name"));

for (let [key, value] of Object.entries(chai)) { // forof loop objects ‡§ï‡•á ‡§≤‡§ø‡§è easy ‡§∞‡§π‡§§‡§æ ‡§π‡•à 
  if (typeof value !== 'function') { //for handling code
    
      console.log(`${key} : ${value}`);
}
}
